{"ast":null,"code":"var _jsxFileName = \"/Users/chungyao/Desktop/ee/7/webexp/mark31408a.github.io/src/LieDetector.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button, ProgressBar } from 'react-bootstrap';\n\nconst LieDetector = props => {\n  const [percentage, setpercentage] = useState(100);\n  const [ans, setans] = useState(\"\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setpercentage(percentage => percentage == 100 ? percentage : percentage + 10);\n    }, 500);\n    return () => clearInterval(interval);\n  }, []);\n\n  const TrueOnclick = () => {\n    if (percentage != 100) return;\n    setpercentage(0);\n    setans(\"Congratulations! You are telling the truth.\");\n  };\n\n  const FalseOnclick = () => {\n    setpercentage(percentage => 0);\n    setans(\"Stop lieing!!!\");\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '20rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    varient: \"bottom\",\n    src: \"./fingerprint.png\",\n    style: {\n      width: '5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Liedetector\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"I can see through everything...\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"answer the question!\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: TrueOnclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"true\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"false\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"please be patient.\"), percentage == 100 ? /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 34\n    }\n  }, ans) : /*#__PURE__*/React.createElement(ProgressBar, {\n    striped: true,\n    variant: \"warning\",\n    now: percentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 63\n    }\n  })));\n};\n\nexport { LieDetector };","map":{"version":3,"sources":["/Users/chungyao/Desktop/ee/7/webexp/mark31408a.github.io/src/LieDetector.js"],"names":["React","useEffect","useState","Card","Button","ProgressBar","LieDetector","props","percentage","setpercentage","ans","setans","interval","setInterval","clearInterval","TrueOnclick","FalseOnclick","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAuC,OAAvC;AACA,SAAQC,IAAR,EAAaC,MAAb,EAAoBC,WAApB,QAAsC,iBAAtC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BJ,MAAAA,aAAa,CAACD,UAAU,IAAEA,UAAU,IAAE,GAAZ,GAAgBA,UAAhB,GAA2BA,UAAU,GAAC,EAAnD,CAAb;AAEP,KAH2B,EAGzB,GAHyB,CAA5B;AAIA,WAAO,MAAMM,aAAa,CAACF,QAAD,CAA1B;AACD,GANM,EAMJ,EANI,CAAT;;AAOE,QAAMG,WAAW,GAAC,MAAI;AACpB,QAAGP,UAAU,IAAE,GAAf,EAAoB;AACpBC,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAE,IAAAA,MAAM,CAAC,6CAAD,CAAN;AACD,GAJD;;AAKA,QAAMK,YAAY,GAAC,MAAI;AACrBP,IAAAA,aAAa,CAACD,UAAU,IAAE,CAAb,CAAb;AACAG,IAAAA,MAAM,CAAC,gBAAD,CAAN;AACD,GAHD;;AAKF,sBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAC,QAAlB;AAA2B,IAAA,GAAG,EAAC,mBAA/B;AAAmD,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAHJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,eAKI,oBAAC,MAAD;AAAS,IAAA,OAAO,EAAC,SAAjB;AAA2B,IAAA,OAAO,EAAEF,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,eAOI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ,EAQKP,UAAU,IAAE,GAAZ,gBAAgB,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYE,GAAZ,CAAhB,gBAA6C,oBAAC,WAAD;AAAa,IAAA,OAAO,MAApB;AAAqB,IAAA,OAAO,EAAC,SAA7B;AAAuC,IAAA,GAAG,EAAEF,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARlD,CADJ,CADJ;AAgBH,CArCD;;AAuCA,SAAQF,WAAR","sourcesContent":["import React ,{useEffect,useState}from 'react';\nimport {Card,Button,ProgressBar} from 'react-bootstrap'\n\nconst LieDetector = (props) => {\n    const [percentage, setpercentage] = useState(100);\n    const [ans, setans] = useState(\"\");\n    \n    useEffect(() => {\n        const interval = setInterval(() => {\n                setpercentage(percentage=>percentage==100?percentage:percentage+10);\n                \n        }, 500);\n        return () => clearInterval(interval);\n      }, []);\n      const TrueOnclick=()=>{\n        if(percentage!=100) return\n        setpercentage(0);\n        setans(\"Congratulations! You are telling the truth.\")\n      };\n      const FalseOnclick=()=>{\n        setpercentage(percentage=>0);\n        setans(\"Stop lieing!!!\")\n      };\n      \n    return (\n        <Card style={{ width: '20rem' }}>\n            <Card.Body>\n                <Card.Img varient=\"bottom\" src=\"./fingerprint.png\" style={{ width: '5rem' }}/>\n                <Card.Title>Liedetector</Card.Title>\n                <Card.Subtitle>I can see through everything...</Card.Subtitle>\n                <Card.Text>answer the question!</Card.Text>\n                <Button  variant=\"success\" onClick={TrueOnclick}>true</Button>\n                <Button variant=\"danger\">false</Button>\n                <Card.Text>please be patient.</Card.Text>\n                {percentage==100?<Card.Text>{ans}</Card.Text>:<ProgressBar striped variant=\"warning\" now={percentage} />}\n                \n  \n            </Card.Body>\n        </Card>\n    );\n}\n\nexport {LieDetector};"]},"metadata":{},"sourceType":"module"}